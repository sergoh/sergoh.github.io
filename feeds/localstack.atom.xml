<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>DevLo Software Blog - localstack</title><link href="https://www.devlo.io/" rel="alternate"></link><link href="https://www.devlo.io/feeds/localstack.atom.xml" rel="self"></link><id>https://www.devlo.io/</id><updated>2023-01-16T00:00:00-07:00</updated><subtitle>Lopez Brothers Blog</subtitle><entry><title>Entrypoint Script with Localstack and Docker-Compose</title><link href="https://www.devlo.io/entrypoint-script-with-localstack.html" rel="alternate"></link><published>2023-01-16T00:00:00-07:00</published><updated>2023-01-16T00:00:00-07:00</updated><author><name>Miguel Lopez</name></author><id>tag:www.devlo.io,2023-01-16:/entrypoint-script-with-localstack.html</id><summary type="html">&lt;p&gt;Use Entrypoint Script to Automatically Provision AWS Resources in Localstack&lt;/p&gt;</summary><content type="html">&lt;p&gt;Technical Stack: AWS, Localstack, Docker, Docker-Compose&lt;/p&gt;
&lt;p&gt;Read: 2 minutes&lt;/p&gt;
&lt;h2&gt;Prerequisites&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Docker, Docker-Compose&lt;/li&gt;
&lt;li&gt;Localstack Docker Image&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Introduction&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Localstack&lt;/strong&gt; is a cloud service emulator that runs in a single container on your laptop or in your CI environment. &lt;a href="https://docs.localstack.cloud/getting-started/?__hstc=108988063.4c3716ab9432d996297196d8a59201a6.1673401275754.1673401275754.1673907003067.2&amp;amp;__hssc=108988063.1.1673907003067&amp;amp;__hsfp=1395183370"&gt;Read More Here.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;After reading this, your docker-compose will: &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Run Localstack&lt;/li&gt;
&lt;li&gt;Create mocked resources in Localstack upon launch&lt;/li&gt;
&lt;li&gt;Local AWS services can be mocked at &lt;code&gt;http://localstack:4566&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Entrypoint Script to Create Mock S3 Buckets in Localstack&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Create and paste the following content to &lt;code&gt;start-localstack.sh&lt;/code&gt;. This will be our entrypoint scipt. &lt;ul&gt;
&lt;li&gt;&lt;code&gt;awslocal&lt;/code&gt; is a thin wrapper for AWS CLI that overriddes the AWS &lt;code&gt;endpoint-url&lt;/code&gt; to &lt;code&gt;localhost:4566&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;When using the default &lt;code&gt;aws&lt;/code&gt; CLI be sure to set the flag &lt;code&gt;--endpoint-url&lt;/code&gt; to &lt;code&gt;localhost:4566&lt;/code&gt; manually. &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;awslocal&lt;/span&gt; &lt;span class="n"&gt;s3&lt;/span&gt; &lt;span class="n"&gt;mb&lt;/span&gt; &lt;span class="nl"&gt;s3:&lt;/span&gt;&lt;span class="c1"&gt;//hsl-local-terraform --region us-west-2&lt;/span&gt;
&lt;span class="n"&gt;awslocal&lt;/span&gt; &lt;span class="n"&gt;s3&lt;/span&gt; &lt;span class="n"&gt;mb&lt;/span&gt; &lt;span class="nl"&gt;s3:&lt;/span&gt;&lt;span class="c1"&gt;//hsl-local-serverless --region us-west-2&lt;/span&gt;
&lt;span class="n"&gt;awslocal&lt;/span&gt; &lt;span class="n"&gt;s3&lt;/span&gt; &lt;span class="n"&gt;ls&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;region&lt;/span&gt; &lt;span class="n"&gt;us&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;west&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mh"&gt;2&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;Pass the &lt;code&gt;start-localstack.sh&lt;/code&gt; script in through our &lt;code&gt;localstack&lt;/code&gt; container in the &lt;code&gt;volume&lt;/code&gt; section. &lt;ul&gt;
&lt;li&gt;All localstack entrypoint files are located at &lt;code&gt;/docker-entrypoint-initaws.d/&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nn"&gt;version&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;3.8&amp;quot;&lt;/span&gt; 
&lt;span class="nn"&gt;services&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="nn"&gt;localstack&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="nn"&gt;image&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s s-Atom"&gt;localstack&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="s s-Atom"&gt;localstack&lt;/span&gt;
        &lt;span class="p"&gt;...&lt;/span&gt;
        &lt;span class="nn"&gt;volumes&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;${TMPDIR:-/tmp}/localstack:/var/lib/localstack&amp;quot;&lt;/span&gt;
            &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;/var/run/docker.sock:/var/run/docker.sock&amp;quot;&lt;/span&gt;
            &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="s s-Atom"&gt;start&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="s s-Atom"&gt;localstack&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nn"&gt;sh&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="s s-Atom"&gt;docker&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="s s-Atom"&gt;entrypoint&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="s s-Atom"&gt;initaws&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="s s-Atom"&gt;d&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="s s-Atom"&gt;start&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="s s-Atom"&gt;localstack&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="s s-Atom"&gt;sh&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;Start the containers using &lt;code&gt;docker-compose up&lt;/code&gt; and observe the S3 buckets being made. &lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;localstack-1  | /usr/local/bin/docker-entrypoint.sh: running /docker-entrypoint-initaws.d/start-localstack.sh
localstack-1  | make_bucket: hsl-local-terraform
localstack-1  | make_bucket: hsl-local-serverless
localstack-1  | 2023-01-16 23:43:34 hsl-local-terraform
localstack-1  | 2023-01-16 23:43:34 hsl-local-serverless
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;Access the S3 Buckets Across Docker Compose Containers&lt;/h2&gt;
&lt;p&gt;If you're running additional containers alongside the &lt;code&gt;localstack&lt;/code&gt; container, you will need to access the &lt;code&gt;localstack&lt;/code&gt; container using the URL &lt;code&gt;http://localstack:4566&lt;/code&gt;. Any boto3 S3 client will need &lt;code&gt;endpoint_url&lt;/code&gt; overridden for &lt;code&gt;localstack&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;If you're running commands inside the &lt;code&gt;localstack&lt;/code&gt; container, then you can stick to &lt;code&gt;localhost:4566&lt;/code&gt; since you're not on the local network. &lt;/p&gt;
&lt;h2&gt;Full Docker-Compose Example&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nn"&gt;version&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;3.8&amp;quot;&lt;/span&gt; 
&lt;span class="nn"&gt;services&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="nn"&gt;localstack&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="nn"&gt;image&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s s-Atom"&gt;localstack&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="s s-Atom"&gt;localstack&lt;/span&gt;
        &lt;span class="nn"&gt;ports&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;4566&lt;/span&gt;&lt;span class="s s-Atom"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;4566&lt;/span&gt;            &lt;span class="s s-Atom"&gt;#&lt;/span&gt; &lt;span class="nv"&gt;LocalStack&lt;/span&gt; &lt;span class="nv"&gt;Edge&lt;/span&gt; &lt;span class="nv"&gt;Proxy&lt;/span&gt;
        &lt;span class="nn"&gt;environment&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="nv"&gt;AWS_DEFAULT_REGION&lt;/span&gt;&lt;span class="s s-Atom"&gt;:&lt;/span&gt; &lt;span class="s s-Atom"&gt;us&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="s s-Atom"&gt;west&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;
        &lt;span class="nv"&gt;AWS_ACCESS_KEY_ID&lt;/span&gt;&lt;span class="s s-Atom"&gt;:&lt;/span&gt; &lt;span class="s s-Atom"&gt;test&lt;/span&gt;
        &lt;span class="nv"&gt;AWS_SECRET_ACCESS_KEY&lt;/span&gt;&lt;span class="s s-Atom"&gt;:&lt;/span&gt; &lt;span class="s s-Atom"&gt;test&lt;/span&gt;
        &lt;span class="nv"&gt;DEBUG&lt;/span&gt;&lt;span class="s s-Atom"&gt;:&lt;/span&gt; &lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;DEBUG&lt;/span&gt;&lt;span class="p"&gt;:-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="nv"&gt;DEFAULT_REGION&lt;/span&gt;&lt;span class="s s-Atom"&gt;:&lt;/span&gt; &lt;span class="s s-Atom"&gt;us&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="s s-Atom"&gt;west&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;
        &lt;span class="nv"&gt;DOCKER_HOST&lt;/span&gt;&lt;span class="s s-Atom"&gt;:&lt;/span&gt; &lt;span class="nn"&gt;unix&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s s-Atom"&gt;///var&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="s s-Atom"&gt;run&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="s s-Atom"&gt;docker&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="s s-Atom"&gt;sock&lt;/span&gt;
        &lt;span class="nv"&gt;DATA_DIR&lt;/span&gt;&lt;span class="s s-Atom"&gt;:&lt;/span&gt; &lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;DATA_DIR&lt;/span&gt;&lt;span class="s s-Atom"&gt;-&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="nv"&gt;LAMBDA_EXECUTOR&lt;/span&gt;&lt;span class="s s-Atom"&gt;:&lt;/span&gt; &lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;LAMBDA_EXECUTOR&lt;/span&gt;&lt;span class="p"&gt;:-&lt;/span&gt;&lt;span class="s s-Atom"&gt;local&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="nv"&gt;LS_LOG&lt;/span&gt;&lt;span class="s s-Atom"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;WARN&lt;/span&gt;
        &lt;span class="nv"&gt;HOST_TMP_FOLDER&lt;/span&gt;&lt;span class="s s-Atom"&gt;:&lt;/span&gt; &lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;TMPDIR&lt;/span&gt;&lt;span class="p"&gt;:-&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="s s-Atom"&gt;tmp/&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s s-Atom"&gt;localstack&lt;/span&gt;
        &lt;span class="nv"&gt;HOSTNAME&lt;/span&gt;&lt;span class="s s-Atom"&gt;:&lt;/span&gt; &lt;span class="s s-Atom"&gt;localstack&lt;/span&gt;
        &lt;span class="nv"&gt;HOSTNAME_EXTERNAL&lt;/span&gt;&lt;span class="s s-Atom"&gt;:&lt;/span&gt; &lt;span class="s s-Atom"&gt;localstack&lt;/span&gt;
        &lt;span class="nv"&gt;USE_SINGLE_REGION&lt;/span&gt;&lt;span class="s s-Atom"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
        &lt;span class="nn"&gt;volumes&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;${TMPDIR:-/tmp}/localstack:/var/lib/localstack&amp;quot;&lt;/span&gt;
            &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;/var/run/docker.sock:/var/run/docker.sock&amp;quot;&lt;/span&gt;
            &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="s s-Atom"&gt;start&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="s s-Atom"&gt;localstack&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nn"&gt;sh&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="s s-Atom"&gt;docker&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="s s-Atom"&gt;entrypoint&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="s s-Atom"&gt;initaws&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="s s-Atom"&gt;d&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="s s-Atom"&gt;start&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="s s-Atom"&gt;localstack&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="s s-Atom"&gt;sh&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;Overall Benefits of Localstack&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Developers can spin up a fully localized enviornment&lt;/li&gt;
&lt;li&gt;Less $$ spent provisioning and cleaning up AWS&lt;/li&gt;
&lt;li&gt;Isolated developer environments&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I hope this guide helps you quickly orchestrate localstack next to your existing applications!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Miguel Lopez&lt;/li&gt;
&lt;/ul&gt;</content><category term="localstack"></category><category term="docker"></category><category term="docker-compose"></category><category term="localstack"></category><category term="serverless"></category><category term="lambda"></category><category term="aws"></category><category term="python"></category><category term="cloud"></category><category term="eventbridge"></category><category term="sns"></category><category term="s3"></category><category term="sqs"></category><category term="api"></category><category term="gateway"></category><category term="local"></category><category term="developer"></category><category term="django"></category><category term="entrypoint"></category></entry><entry><title>Run Localstack with Docker-Compose</title><link href="https://www.devlo.io/run-localstack-with-docker-compose.html" rel="alternate"></link><published>2023-01-16T00:00:00-07:00</published><updated>2023-01-16T00:00:00-07:00</updated><author><name>Miguel Lopez</name></author><id>tag:www.devlo.io,2023-01-16:/run-localstack-with-docker-compose.html</id><summary type="html">&lt;p&gt;Use Localstack to Mock AWS Services For Local Containers&lt;/p&gt;</summary><content type="html">&lt;p&gt;Technical Stack: AWS, Localstack, Docker, Docker-Compose&lt;/p&gt;
&lt;p&gt;Read: 5 minutes&lt;/p&gt;
&lt;h2&gt;Prerequisites&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Docker, Docker-Compose&lt;/li&gt;
&lt;li&gt;Localstack Docker Image&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Introduction&lt;/h2&gt;
&lt;p&gt;Looking to run AWS services locally and improve the development experience? Are you hoping to make a fully isolated enviornment with no (real) shared AWS resources? Then look no further!&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Localstack&lt;/strong&gt; is a cloud service emulator that runs in a single container on your laptop or in your CI environment. &lt;a href="https://docs.localstack.cloud/getting-started/?__hstc=108988063.4c3716ab9432d996297196d8a59201a6.1673401275754.1673401275754.1673907003067.2&amp;amp;__hssc=108988063.1.1673907003067&amp;amp;__hsfp=1395183370"&gt;Read More Here.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;After reading this, your application will: &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Run Localstack in docker-compose&lt;/li&gt;
&lt;li&gt;Local AWS services can be mocked at &lt;code&gt;http://localstack:4566&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Boto3 Client is overridden to point to Localstack in docker-compose&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Localstack on Docker Compose&lt;/h2&gt;
&lt;p&gt;In this example, I will start two services through docker-compose, &lt;code&gt;localstack&lt;/code&gt; and &lt;code&gt;api&lt;/code&gt;: &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;localstack&lt;/code&gt; runs the AWS Emulator and will expose AWS services at &lt;code&gt;http://localstack:4566&lt;/code&gt;. &lt;/li&gt;
&lt;li&gt;&lt;code&gt;api&lt;/code&gt; is running a Django API Server&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nn"&gt;version&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;3.8&amp;quot;&lt;/span&gt; 
&lt;span class="nn"&gt;services&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="nn"&gt;localstack&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="nn"&gt;image&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s s-Atom"&gt;localstack&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="s s-Atom"&gt;localstack&lt;/span&gt;
        &lt;span class="nn"&gt;ports&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;4566&lt;/span&gt;&lt;span class="s s-Atom"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;4566&lt;/span&gt;            &lt;span class="s s-Atom"&gt;#&lt;/span&gt; &lt;span class="nv"&gt;LocalStack&lt;/span&gt; &lt;span class="nv"&gt;Edge&lt;/span&gt; &lt;span class="nv"&gt;Proxy&lt;/span&gt;
        &lt;span class="nn"&gt;environment&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="nv"&gt;AWS_DEFAULT_REGION&lt;/span&gt;&lt;span class="s s-Atom"&gt;:&lt;/span&gt; &lt;span class="s s-Atom"&gt;us&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="s s-Atom"&gt;west&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;
            &lt;span class="nv"&gt;AWS_ACCESS_KEY_ID&lt;/span&gt;&lt;span class="s s-Atom"&gt;:&lt;/span&gt; &lt;span class="s s-Atom"&gt;test&lt;/span&gt;
            &lt;span class="nv"&gt;AWS_SECRET_ACCESS_KEY&lt;/span&gt;&lt;span class="s s-Atom"&gt;:&lt;/span&gt; &lt;span class="s s-Atom"&gt;test&lt;/span&gt;
            &lt;span class="nv"&gt;DEBUG&lt;/span&gt;&lt;span class="s s-Atom"&gt;:&lt;/span&gt; &lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;DEBUG&lt;/span&gt;&lt;span class="p"&gt;:-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="nv"&gt;DEFAULT_REGION&lt;/span&gt;&lt;span class="s s-Atom"&gt;:&lt;/span&gt; &lt;span class="s s-Atom"&gt;us&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="s s-Atom"&gt;west&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;
            &lt;span class="nv"&gt;DOCKER_HOST&lt;/span&gt;&lt;span class="s s-Atom"&gt;:&lt;/span&gt; &lt;span class="nn"&gt;unix&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s s-Atom"&gt;///var&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="s s-Atom"&gt;run&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="s s-Atom"&gt;docker&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="s s-Atom"&gt;sock&lt;/span&gt;
            &lt;span class="nv"&gt;DATA_DIR&lt;/span&gt;&lt;span class="s s-Atom"&gt;:&lt;/span&gt; &lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;DATA_DIR&lt;/span&gt;&lt;span class="s s-Atom"&gt;-&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="nv"&gt;LAMBDA_EXECUTOR&lt;/span&gt;&lt;span class="s s-Atom"&gt;:&lt;/span&gt; &lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;LAMBDA_EXECUTOR&lt;/span&gt;&lt;span class="p"&gt;:-&lt;/span&gt;&lt;span class="s s-Atom"&gt;local&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="nv"&gt;LS_LOG&lt;/span&gt;&lt;span class="s s-Atom"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;WARN&lt;/span&gt;
            &lt;span class="nv"&gt;HOST_TMP_FOLDER&lt;/span&gt;&lt;span class="s s-Atom"&gt;:&lt;/span&gt; &lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;TMPDIR&lt;/span&gt;&lt;span class="p"&gt;:-&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="s s-Atom"&gt;tmp/&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s s-Atom"&gt;localstack&lt;/span&gt;
            &lt;span class="nv"&gt;HOSTNAME&lt;/span&gt;&lt;span class="s s-Atom"&gt;:&lt;/span&gt; &lt;span class="s s-Atom"&gt;localstack&lt;/span&gt;
            &lt;span class="nv"&gt;HOSTNAME_EXTERNAL&lt;/span&gt;&lt;span class="s s-Atom"&gt;:&lt;/span&gt; &lt;span class="s s-Atom"&gt;localstack&lt;/span&gt;
            &lt;span class="nv"&gt;USE_SINGLE_REGION&lt;/span&gt;&lt;span class="s s-Atom"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
        &lt;span class="nn"&gt;volumes&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;${TMPDIR:-/tmp}/localstack:/var/lib/localstack&amp;quot;&lt;/span&gt;
            &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;/var/run/docker.sock:/var/run/docker.sock&amp;quot;&lt;/span&gt;
    &lt;span class="nn"&gt;api&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="nn"&gt;build&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="nn"&gt;dockerfile&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;Dockerfile&lt;/span&gt;
        &lt;span class="nn"&gt;environment&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="nv"&gt;AWS_ENDPOINT_URL&lt;/span&gt;&lt;span class="s s-Atom"&gt;:&lt;/span&gt; &lt;span class="nn"&gt;http&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="nn"&gt;localstack&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;4566&lt;/span&gt;
            &lt;span class="nv"&gt;CELERY_BROKER_URL&lt;/span&gt;&lt;span class="s s-Atom"&gt;:&lt;/span&gt; &lt;span class="nn"&gt;sqs&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="nn"&gt;test&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s s-Atom"&gt;test@&lt;/span&gt;&lt;span class="nn"&gt;localstack&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;4566&lt;/span&gt;
            &lt;span class="nv"&gt;DJANGO_SETTINGS_MODULE&lt;/span&gt;&lt;span class="s s-Atom"&gt;:&lt;/span&gt; &lt;span class="s s-Atom"&gt;messages&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="s s-Atom"&gt;settings&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="s s-Atom"&gt;docker_localstack&lt;/span&gt;
            &lt;span class="nv"&gt;LOG_HANDLER&lt;/span&gt;&lt;span class="s s-Atom"&gt;:&lt;/span&gt; &lt;span class="s s-Atom"&gt;console&lt;/span&gt;
            &lt;span class="nv"&gt;LOG_LEVEL&lt;/span&gt;&lt;span class="s s-Atom"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;INFO&amp;quot;&lt;/span&gt;
            &lt;span class="nv"&gt;PYTHONUNBUFFERED&lt;/span&gt;&lt;span class="s s-Atom"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
        &lt;span class="s s-Atom"&gt;depends_on:&lt;/span&gt;
            &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="s s-Atom"&gt;localstack&lt;/span&gt;
        &lt;span class="nn"&gt;ports&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;80:80&amp;quot;&lt;/span&gt;
        &lt;span class="nn"&gt;command&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s s-Atom"&gt;uwsgi&lt;/span&gt; &lt;span class="s s-Atom"&gt;--http&lt;/span&gt; &lt;span class="mf"&gt;0.0.0.0&lt;/span&gt;&lt;span class="s s-Atom"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;9090&lt;/span&gt; &lt;span class="s s-Atom"&gt;--wsgi&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="s s-Atom"&gt;file&lt;/span&gt; &lt;span class="s s-Atom"&gt;messages&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="s s-Atom"&gt;wsgi&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="s s-Atom"&gt;dev&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="s s-Atom"&gt;py&lt;/span&gt; &lt;span class="s s-Atom"&gt;--callable&lt;/span&gt; &lt;span class="s s-Atom"&gt;application&lt;/span&gt; &lt;span class="s s-Atom"&gt;--uid&lt;/span&gt; &lt;span class="s s-Atom"&gt;appuser&lt;/span&gt; &lt;span class="s s-Atom"&gt;--gid&lt;/span&gt; &lt;span class="s s-Atom"&gt;appuser&lt;/span&gt; &lt;span class="s s-Atom"&gt;--enable&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="s s-Atom"&gt;threads&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Copy and paste the following code into &lt;code&gt;docker-compose.yml&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Build the images: &lt;code&gt;docker-compose -f docker-compose.yml build --pull&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Run the containers: &lt;code&gt;docker-compose -f docker-compose.yml up&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;At this point, &lt;code&gt;localstack&lt;/code&gt; will start alongside the &lt;code&gt;api&lt;/code&gt; container and will be ready to mock AWS services at &lt;code&gt;http://localstack:4566&lt;/code&gt;. &lt;/p&gt;
&lt;h2&gt;Override Default S3 Endpoint to Localstack URL&lt;/h2&gt;
&lt;p&gt;Just because you started &lt;code&gt;localstack&lt;/code&gt; doesn't mean AWS services are automatically mocked. Your applications will need to override the &lt;code&gt;endpoint_url&lt;/code&gt; for &lt;strong&gt;every&lt;/strong&gt; boto3 client call you wish to mock.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Set the envrionment variable &lt;code&gt;AWS_ENDPOINT_URL&lt;/code&gt; for your API application in &lt;code&gt;docker-compose.yml&lt;/code&gt;. &lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;AWS_ENDPOINT_URL&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="o"&gt;://&lt;/span&gt;&lt;span class="n"&gt;localstack&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;4566&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;Pull &lt;code&gt;AWS_ENDPOINT_URL&lt;/code&gt; into your application settings&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;AWS_ENDPOINT_URL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;environ&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;AWS_ENDPOINT_URL&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;None&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;Override the boto3 client &lt;code&gt;endpoint_url&lt;/code&gt; to point to your localstack container&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;client&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;boto3&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;s3&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;endpoint_url&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;settings&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;AWS_ENDPOINT_URL&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;All calls to &lt;code&gt;s3&lt;/code&gt; will now go to your localstack container. &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You &lt;strong&gt;must&lt;/strong&gt; override the &lt;code&gt;boto3&lt;/code&gt; client for &lt;strong&gt;each&lt;/strong&gt; AWS service that you wish to mock.&lt;/p&gt;
&lt;h2&gt;Changing the Hostname for Localstack Container&lt;/h2&gt;
&lt;p&gt;The &lt;code&gt;hostname&lt;/code&gt; of the localstack container is determined by:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The alias name of the &lt;code&gt;services&lt;/code&gt; block running the &lt;code&gt;localstack&lt;/code&gt; image. (&lt;code&gt;localstack&lt;/code&gt; in this case)&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;    version: &amp;quot;3.8&amp;quot; 
    services:
        localstack:  # &amp;lt;---- Alias name used to call the localstack container
            image: localstack/localstack
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;The Environment Variable &lt;code&gt;HOSTNAME_EXTERNAL&lt;/code&gt; on the &lt;code&gt;localstack&lt;/code&gt; image. &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The localstack &lt;code&gt;hostname&lt;/code&gt; is how other containers in your &lt;code&gt;docker-compose&lt;/code&gt; network will communicate to your localstack container.&lt;/p&gt;
&lt;h2&gt;Overall Benefits of Localstack&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Developers can spin up a fully localized enviornment&lt;/li&gt;
&lt;li&gt;Less $$ spent provisioning and cleaning up AWS&lt;/li&gt;
&lt;li&gt;Isolated developer environments&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I hope this guide helps you quickly orchestrate localstack next to your existing applications!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Miguel Lopez&lt;/li&gt;
&lt;/ul&gt;</content><category term="localstack"></category><category term="docker"></category><category term="docker-compose"></category><category term="localstack"></category><category term="serverless"></category><category term="lambda"></category><category term="aws"></category><category term="python"></category><category term="cloud"></category><category term="eventbridge"></category><category term="sns"></category><category term="s3"></category><category term="sqs"></category><category term="api"></category><category term="gateway"></category><category term="local"></category><category term="developer"></category><category term="django"></category></entry></feed>